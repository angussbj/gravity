{"version":3,"sources":["components/content/Line.tsx","components/content/Content.tsx","components/environment/Lighting.tsx","components/environment/Environment.tsx","ui/TextInput.tsx","components/controls/RemoveBodyButton.tsx","components/controls/BodyControls.tsx","components/controls/AddBodyButton.tsx","components/controls/InitialStateControls.tsx","components/controls/SimulationParameterControls.tsx","components/controls/Controls.tsx","App.tsx","index.tsx","ui/CheckboxInput.tsx","ui/ColorInput.tsx","ui/Row.tsx","ui/VectorInput.tsx","ui/NumberInput.tsx","logic/index.ts","ui/Column.tsx","ui/colors.ts","ui/InputLabel.tsx","ui/TextField.tsx","ui/IconButton.tsx","ui/useHover.ts","utilities/sanitiseNumericString.ts","utilities/random.ts","utilities/useWindowDimensions.ts","logic/serialisation.ts","logic/examples.ts","logic/Pather/System.ts","logic/Pather/gravity.ts","logic/Pather/transformPathsToCenterOfMassFrame.ts","logic/Pather/Pather.ts","logic/Universe.ts","logic/UniverseContext.tsx"],"names":["Line","points","color","Colors","random","geometry","useRef","BufferGeometry","current","setFromPoints","attach","toString","linewidth","linecap","linejoin","extend","Line_","ThreeLine","Content","universe","useUniverse","state","map","body","path","id","Lighting","intensity","Environment","children","style","position","left","right","top","bottom","background","BLACK","camera","shadows","args","OrbitControls","autoRotate","TextInput","label","value","onChange","Column","InputLabel","TextField","width","maxWidth","RemoveBodyButton","bodyId","removeBody","useCallback","update","IconButton","onClick","Tooltip","title","size","BodyControls","index","BodyControlsContainer","justifyContent","gap","name","newName","replace","setInitial","render","newColor","x","onSubmitOrBlur","v","m","newMass","enterDelay","enterNextDelay","frameFollows","val","styled","div","AddBodyButton","addBody","InitialStateControls","Container","LIGHT","fontSize","i","Separator","fade","SimulationParameterControls","ControlsGroup","pathingDepth","pathingStepSize","Row","Controls","windowHeight","useWindowDimensions","height","useState","open","setOpen","ControlsContainer","maxHeight","DARK","App","setRenderHelper","Universe","ReactDOM","StrictMode","document","getElementById","CheckboxInput","type","checked","e","target","backgroundColor","accentColor","ColorInput","ref","useEffect","closeOnEscape","key","window","addEventListener","closeOnOutsideClick","contains","removeEventListener","o","marginBottom","marginTop","marginLeft","ColorSquare","Anchor","zIndex","hex","c","includes","Color","VectorInput","setX","y","setY","z","setZ","parseFloat","sanitiseNumericString","onSubmit","onBlur","NumberInput","LIGHT_GREY","WHITE","hsv","LabelContainer","focusFirstRender","ariaLabel","inputRef","focus","className","onKeyDown","aria-label","flex","borderColor","disabled","rest","setValue","handleMouseOver","handleMouseOut","node","useHover","hovered","s","negative","pieces","split","length","slice","join","min","max","Math","floor","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","bodyParametersToString","x0","v0","parseBodyParametersFromString","input","parts","undefined","Vector3","Boolean","parseInt","parseNullableFloat","defaultValue","examples","stateString","System","V","ZERO","clone","this","push","copy","bodies","Error","other","add","scalar","multiplyScalar","result","gravity","masses","output","G","r","k","setVelocityToZero","j","sub","normalize","Pather","initialState","maxXStep","paths","k1","k2","k3","k4","s1","s2","s3","O","setFrom","b","depth","step","appendStateToPaths","frameIndices","totalMass","t","divideScalar","transformPathsToCenterOfMassFrame","timeStep","maxVelocity","addMultiple","state0","bodyIdCounter","setFromUrl","setToInitialState","calculatePaths","autoBind","parameters","updateUrl","filter","field","find","list","elementToString","url","URL","location","searchParams","set","history","pushState","elementParser","parseList","params","URLSearchParams","search","setInitialStateFromString","get","getPaths","isPresent","forEach","UniverseContext","createContext","UniverseContextProvider","Provider","useContext"],"mappings":"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","file":"static/js/main.bd0b212f.chunk.js","sourcesContent":["import { extend, ReactThreeFiber } from \"@react-three/fiber\";\nimport { BufferGeometry, Line as ThreeLine, Vector3 } from \"three\";\nimport Color from \"color\";\nimport React, { ReactElement, useRef } from \"react\";\nimport { Colors } from \"ui\";\n\nextend({ Line_: ThreeLine });\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      line_: ReactThreeFiber.Object3DNode<ThreeLine, typeof ThreeLine>;\n    }\n  }\n}\n\ninterface Props {\n  points: Vector3[];\n  color?: Color;\n}\n\nexport function Line({ points, color = Colors.random() }: Props): ReactElement {\n  const geometry = useRef(new BufferGeometry()).current;\n  geometry.setFromPoints(points);\n\n  return (\n    <line_ geometry={geometry}>\n      <lineBasicMaterial\n        attach=\"material\"\n        color={color.toString()}\n        linewidth={10}\n        linecap={\"round\"}\n        linejoin={\"round\"}\n      />\n    </line_>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Line } from \"./Line\";\nimport { useUniverse } from \"logic\";\n\nexport function Content(): ReactElement {\n  // const universe = useRef(new Universe()).current;\n  const universe = useUniverse();\n\n  return (\n    <>\n      {universe.state.map((body) => (\n        <Line key={body.id} points={body.path} color={body.color} />\n      ))}\n    </>\n  );\n}\n","import React, { FC } from \"react\";\n\nexport const Lighting: FC = () => {\n  // general glow plus three slightly different-warmth lights around the equator\n  return (\n    <>\n      <ambientLight intensity={1} />\n    </>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Lighting } from \"./Lighting\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { Colors } from \"ui\";\n\nexport function Environment({\n  children,\n}: {\n  children: ReactNode;\n}): React.ReactElement {\n  return (\n    <div style={{ position: \"absolute\", left: 0, right: 0, top: 0, bottom: 0 }}>\n      <Canvas\n        style={{ background: Colors.BLACK.toString() }}\n        camera={{ position: [0, 5, 0] }}\n        shadows\n      >\n        <gridHelper args={[20, 20]} />\n        <Lighting />\n        {children}\n        <OrbitControls autoRotate={false} />\n      </Canvas>\n    </div>\n  );\n}\n","import React, { CSSProperties, ReactElement } from \"react\";\nimport { TextField } from \"./TextField\";\nimport { Column } from \"./Column\";\nimport { InputLabel } from \"./InputLabel\";\n\ninterface Props {\n  label?: string;\n  value: string;\n  onChange: (x: string) => void;\n  style?: CSSProperties;\n}\n\nexport function TextInput({\n  label,\n  value,\n  onChange,\n  style,\n}: Props): ReactElement {\n  return (\n    <Column style={style}>\n      <InputLabel label={label} />\n      <TextField\n        value={value}\n        onChange={onChange}\n        style={{ width: style?.width ?? 62, maxWidth: style?.width ?? 62 }}\n      />\n    </Column>\n  );\n}\n","import { IconButton } from \"../../ui/IconButton\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { IoMdRemoveCircleOutline } from \"react-icons/all\";\nimport React, { CSSProperties, ReactElement, useCallback } from \"react\";\nimport { useUniverse } from \"logic\";\n\ninterface Props {\n  bodyId: string;\n  style?: CSSProperties;\n}\n\nexport function RemoveBodyButton({ bodyId, style }: Props): ReactElement {\n  const universe = useUniverse();\n\n  const removeBody = useCallback((): void => {\n    universe.removeBody(bodyId);\n    universe.update();\n  }, [universe]);\n\n  return (\n    <IconButton onClick={removeBody} style={style}>\n      <Tooltip title={\"Remove body\"}>\n        <div>\n          <IoMdRemoveCircleOutline size={16} />\n        </div>\n      </Tooltip>\n    </IconButton>\n  );\n}\n","import { CheckboxInput, ColorInput, NumberInput, Row, VectorInput } from \"ui\";\nimport { TextInput } from \"../../ui/TextInput\";\nimport React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport { Body, useUniverse } from \"logic\";\nimport { RemoveBodyButton } from \"./RemoveBodyButton\";\nimport { Tooltip } from \"@material-ui/core\";\n\ninterface Props {\n  body: Body;\n  index: number;\n}\n\nexport function BodyControls({ body, index }: Props): ReactElement {\n  const universe = useUniverse();\n\n  return (\n    <BodyControlsContainer>\n      <Row style={{ justifyContent: \"space-between\" }}>\n        <Row style={{ gap: 4 }}>\n          <TextInput\n            label={\"Name\"}\n            value={body.name ?? `Body ${index + 1}`}\n            onChange={(newName): void => {\n              body.name = newName.replace(/[_*]/, \"\");\n              universe.setInitial(\"name\", body.id, newName);\n              universe.render();\n            }}\n          />\n          <ColorInput\n            label={\"Color\"}\n            value={body.color}\n            onChange={(newColor): void => {\n              body.color = newColor;\n              universe.setInitial(\"color\", body.id, newColor);\n              universe.render();\n            }}\n          />\n        </Row>\n        <RemoveBodyButton bodyId={body.id} />\n      </Row>\n      <VectorInput\n        label={\"Position\"}\n        value={body.x}\n        onSubmitOrBlur={universe.update}\n      />\n      <VectorInput\n        label={\"Velocity\"}\n        value={body.v}\n        onSubmitOrBlur={universe.update}\n      />\n      <Row style={{ gap: 4 }}>\n        <NumberInput\n          label={\"Mass\"}\n          value={body.m}\n          onSubmitOrBlur={(newMass): void => {\n            universe.setInitial(\"m\", body.id, newMass);\n            universe.update();\n          }}\n        />\n        <Tooltip\n          title={\n            \"The frame of reference follows the center of mass of selected bodies\"\n          }\n          enterDelay={600}\n          enterNextDelay={400}\n        >\n          <div>\n            <CheckboxInput\n              label={\"Frame\"}\n              value={body.frameFollows}\n              onChange={(val): void => {\n                universe.setInitial(\"frameFollows\", body.id, val);\n                universe.update();\n              }}\n            />\n          </div>\n        </Tooltip>\n      </Row>\n    </BodyControlsContainer>\n  );\n}\n\nconst BodyControlsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-left: 8px;\n`;\n","import { IconButton } from \"../../ui/IconButton\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { IoMdAddCircleOutline } from \"react-icons/all\";\nimport React, { ReactElement, useCallback } from \"react\";\nimport { useUniverse } from \"logic\";\n\nexport function AddBodyButton(): ReactElement {\n  const universe = useUniverse();\n\n  const addBody = useCallback((): void => {\n    universe.addBody();\n    universe.update();\n  }, []);\n\n  return (\n    <IconButton onClick={addBody} style={{}}>\n      <Tooltip title={\"Add new body\"}>\n        <div>\n          <IoMdAddCircleOutline />\n        </div>\n      </Tooltip>\n    </IconButton>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Colors } from \"ui\";\nimport { useUniverse } from \"logic\";\nimport styled from \"styled-components\";\nimport { BodyControls } from \"./BodyControls\";\nimport { AddBodyButton } from \"./AddBodyButton\";\n\nexport function InitialStateControls(): ReactElement {\n  const universe = useUniverse();\n\n  return (\n    <Container style={{ color: Colors.LIGHT.toString(), fontSize: 12 }}>\n      Initial state:\n      {universe.state.map((body, i) => {\n        return (\n          <>\n            <BodyControls body={body} index={i} key={body.id} />\n            <Separator key={body.id + \"separator\"} />\n          </>\n        );\n      })}\n      <AddBodyButton key={\"add_body\"} />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst Separator = styled.div`\n  border-bottom: 1px solid ${Colors.LIGHT.fade(0.5).toString()};\n  align-self: stretch;\n  margin-left: 40px;\n  margin-right: 40px;\n`;\n","import React, { ReactElement } from \"react\";\nimport { Colors, NumberInput, Row } from \"ui\";\nimport { useUniverse } from \"logic\";\nimport styled from \"styled-components\";\n\nexport function SimulationParameterControls(): ReactElement {\n  const universe = useUniverse();\n\n  return (\n    <Container style={{ color: Colors.LIGHT.toString(), fontSize: 12 }}>\n      Path extrapolation parameters:\n      <ControlsGroup>\n        <NumberInput\n          label={\"Step count\"}\n          value={universe.pathingDepth}\n          onSubmitOrBlur={(val): void => {\n            universe.pathingDepth = val;\n            universe.update();\n          }}\n        />\n        <NumberInput\n          label={\"Step size\"}\n          value={universe.pathingStepSize}\n          onSubmitOrBlur={(val): void => {\n            universe.pathingStepSize = val;\n            universe.update();\n          }}\n        />\n      </ControlsGroup>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst ControlsGroup = styled(Row)`\n  gap: 4px;\n  margin-left: 8px;\n`;\n","import React, { ReactElement, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { RxHamburgerMenu } from \"react-icons/rx\";\nimport { Colors } from \"ui\";\nimport { useWindowDimensions } from \"utilities\";\nimport { InitialStateControls } from \"./InitialStateControls\";\nimport { SimulationParameterControls } from \"./SimulationParameterControls\";\nimport { IconButton } from \"../../ui/IconButton\";\nimport { IoMdClose } from \"react-icons/io\";\n\nexport function Controls(): ReactElement {\n  const { height: windowHeight } = useWindowDimensions();\n  const [open, setOpen] = useState(true);\n\n  if (!open) {\n    return (\n      <IconButton\n        onClick={(): void => setOpen(true)}\n        style={{ position: \"absolute\", top: 16, right: 16 }}\n      >\n        <RxHamburgerMenu />\n      </IconButton>\n    );\n  }\n\n  return (\n    // TODO: Why does 88 work - shouldn't 32 be enough?\n    <ControlsContainer style={{ maxHeight: windowHeight - 88 }}>\n      <IconButton\n        onClick={(): void => setOpen(false)}\n        style={{ position: \"absolute\", top: 0, right: 0 }}\n      >\n        <IoMdClose />\n      </IconButton>\n      <InitialStateControls />\n      <SimulationParameterControls />\n    </ControlsContainer>\n  );\n}\n\nconst ControlsContainer = styled.div`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 240px;\n  min-height: 100px;\n  background-color: ${Colors.DARK.toString()};\n  border: 1px solid ${Colors.LIGHT.toString()};\n  overflow-y: auto;\n  overflow-x: auto;\n  scroll-behaviour: smooth;\n  padding: 12px;\n  padding-bottom: 40px;\n  padding-top: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport { Content, Controls, Environment } from \"components\";\nimport { Universe, UniverseContextProvider } from \"logic\";\n\nfunction App(): React.ReactElement {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [_renderHelper, setRenderHelper] = useState(false);\n  const render = useCallback(\n    (): void => setRenderHelper((x): boolean => !x),\n    []\n  );\n  const [universe] = useState(() => new Universe(render));\n\n  return (\n    <>\n      <UniverseContextProvider universe={universe}>\n        <Environment>\n          <Content />\n        </Environment>\n        <Controls />\n      </UniverseContextProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// TODO: Replace with createRoot\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React, { CSSProperties, ReactElement } from \"react\";\nimport \"./Checkbox.css\";\nimport { Column } from \"./Column\";\nimport { InputLabel } from \"./InputLabel\";\nimport { Colors } from \"./colors\";\n\ninterface Props {\n  label?: string;\n  value: boolean;\n  onChange: (x: boolean) => void;\n  style?: CSSProperties;\n}\n\nexport function CheckboxInput({\n  label,\n  value,\n  onChange,\n  style,\n}: Props): ReactElement {\n  return (\n    <Column style={style}>\n      <InputLabel label={label} />\n      <input\n        type={\"checkbox\"}\n        checked={value}\n        onChange={(e): void => onChange(e.target.checked)}\n        style={\n          {\n            backgroundColor: Colors.DARK.toString(),\n            color: \"red\",\n            accentColor: \"green\",\n          } as CSSProperties // To make the type accept accent color key\n        }\n      />\n    </Column>\n  );\n}\n","import React, {\n  CSSProperties,\n  ReactElement,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { Column } from \"./Column\";\nimport { InputLabel } from \"./InputLabel\";\nimport Color from \"color\";\nimport { HexColorPicker } from \"react-colorful\";\nimport styled from \"styled-components\";\nimport { IconButton } from \"./IconButton\";\n\ninterface Props {\n  label?: string;\n  value: Color;\n  onChange: (x: Color) => void;\n  style?: CSSProperties;\n}\n\nexport function ColorInput({\n  label,\n  value,\n  onChange,\n  style,\n}: Props): ReactElement {\n  const [open, setOpen] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const closeOnEscape = (e: KeyboardEvent): void => {\n      if (e.key === \"Escape\") setOpen(false);\n    };\n    window.addEventListener(\"keydown\", closeOnEscape);\n\n    const closeOnOutsideClick = (e: MouseEvent): void => {\n      if (ref.current && !ref.current.contains(e.target as Node))\n        setOpen(false);\n    };\n    window.addEventListener(\"mousedown\", closeOnOutsideClick);\n\n    return (): void => {\n      window.removeEventListener(\"keydown\", closeOnEscape);\n      window.removeEventListener(\"mousedown\", closeOnOutsideClick);\n    };\n  }, [ref, setOpen]);\n\n  // TODO: add hidden text input for accessibility\n  return (\n    <Column style={style}>\n      <InputLabel label={label} />\n      <IconButton\n        onClick={(): void => setOpen((o) => !o)}\n        style={{ marginBottom: -8, marginTop: -4, marginLeft: -4 }}\n      >\n        <ColorSquare style={{ backgroundColor: value.toString() }} />\n      </IconButton>\n\n      <Anchor>\n        {open && (\n          <div\n            ref={ref}\n            style={{\n              position: \"absolute\",\n              left: -60,\n              zIndex: 1,\n            }}\n          >\n            <HexColorPicker\n              color={value.hex()}\n              onChange={(c): void => {\n                if (!c.includes(\"NaN\")) onChange(Color(c));\n              }}\n            />\n          </div>\n        )}\n      </Anchor>\n    </Column>\n  );\n}\n\nconst ColorSquare = styled.div`\n  width: 12px;\n  height: 12px;\n`;\n\nconst Anchor = styled.div`\n  width: 1px;\n  height: 1px;\n  overflow: visible;\n  position: relative;\n`;\n","import styled from \"styled-components\";\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n","import React, {\n  CSSProperties,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { Row } from \"./Row\";\nimport { Vector3 } from \"three\";\nimport { TextField } from \"./TextField\";\nimport { sanitiseNumericString } from \"../utilities/sanitiseNumericString\";\nimport { Column } from \"./Column\";\nimport { InputLabel } from \"./InputLabel\";\n\ninterface Props {\n  label?: string;\n  value: Vector3;\n  onSubmitOrBlur: (x: Vector3) => void;\n  style?: CSSProperties;\n}\n\n// This component will mutate the Vector\nexport function VectorInput({\n  label,\n  value,\n  onSubmitOrBlur,\n  style,\n}: Props): ReactElement {\n  const [x, setX] = useState(value.x.toString());\n  const [y, setY] = useState(value.y.toString());\n  const [z, setZ] = useState(value.z.toString());\n\n  useEffect(() => {\n    if (x != value.x.toString()) setX(value.x.toString());\n    if (y != value.y.toString()) setY(value.y.toString());\n    if (z != value.z.toString()) setZ(value.z.toString());\n  }, [value.x, value.y, value.z]);\n\n  const update = useCallback(() => {\n    setX(x || \"0\");\n    setY(y || \"0\");\n    setZ(z || \"0\");\n    value.setX(parseFloat(x || \"0\"));\n    value.setY(parseFloat(y || \"0\"));\n    value.setZ(parseFloat(z || \"0\"));\n    onSubmitOrBlur(value);\n  }, [value, x, y, z, setX, setY, setZ]);\n\n  return (\n    <Column style={style}>\n      <InputLabel label={label + \" (x, y, z)\"} />\n      <Row>\n        <TextField\n          value={x}\n          onChange={(x): void => {\n            setX(sanitiseNumericString(x));\n          }}\n          onSubmit={update}\n          onBlur={update}\n          style={{ width: 62, maxWidth: 62 }}\n        />\n        <TextField\n          value={y}\n          onChange={(y): void => {\n            setY(sanitiseNumericString(y));\n          }}\n          onSubmit={update}\n          onBlur={update}\n          style={{ marginLeft: 4, width: 62, maxWidth: 62 }}\n        />\n        <TextField\n          value={z}\n          onChange={(z): void => {\n            setZ(sanitiseNumericString(z));\n          }}\n          onSubmit={update}\n          onBlur={update}\n          style={{ marginLeft: 4, width: 62, maxWidth: 62 }}\n        />\n      </Row>\n    </Column>\n  );\n}\n","import React, {\n  CSSProperties,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { TextField } from \"./TextField\";\nimport { sanitiseNumericString } from \"../utilities/sanitiseNumericString\";\nimport { Column } from \"./Column\";\nimport { InputLabel } from \"./InputLabel\";\n\ninterface Props {\n  label?: string;\n  value: number;\n  onSubmitOrBlur: (x: number) => void;\n  style?: CSSProperties;\n}\n\nexport function NumberInput({\n  label,\n  value,\n  onSubmitOrBlur,\n  style,\n}: Props): ReactElement {\n  const [x, setX] = useState(value.toString());\n\n  useEffect(() => {\n    if (x != value.toString()) setX(value.toString());\n  }, [value]);\n\n  const update = useCallback(() => {\n    setX(x || \"0\");\n    onSubmitOrBlur(parseFloat(x || \"0\"));\n  }, [value, x, setX]);\n\n  return (\n    <Column style={style}>\n      <InputLabel label={label} />\n      <TextField\n        value={x}\n        onChange={(x): void => {\n          setX(sanitiseNumericString(x));\n        }}\n        onSubmit={update}\n        onBlur={update}\n        style={{ width: style?.width ?? 62, maxWidth: style?.width ?? 62 }}\n      />\n    </Column>\n  );\n}\n","export * from \"./Body\";\nexport * from \"./Universe\";\nexport * from \"./UniverseContext\";\n","import styled from \"styled-components\";\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import Color from \"color\";\nimport { random } from \"utilities\";\n\nexport const Colors = {\n  BLACK: Color(\"#000000\"),\n  DARK: Color(\"#101113\"),\n  LIGHT_GREY: Color(\"#8C8D8F\"),\n  LIGHT: Color(\"#DCDDDF\"),\n  WHITE: Color(\"#FFFFFF\"),\n  random: (): Color =>\n    Color.hsv(random(0, 360), random(50, 100), random(50, 100)),\n};\n","import React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"./colors\";\n\ninterface Props {\n  label?: string;\n}\n\nexport function InputLabel({ label }: Props): ReactElement | null {\n  return label ? <LabelContainer>{label}</LabelContainer> : null;\n}\n\nconst LabelContainer = styled.div`\n  color: ${Colors.LIGHT.toString()};\n  font-size: 10px;\n`;\n","import React, { useEffect, useRef } from \"react\";\nimport \"./TextField.css\";\nimport { Colors } from \"./colors\";\n\ninterface Props {\n  value: string | number;\n  onChange: (newVal: string) => void;\n  style?: React.CSSProperties;\n  focusFirstRender?: boolean;\n  onSubmit?: () => void;\n  onBlur?: () => void;\n  ariaLabel?: string;\n}\n\nexport function TextField({\n  value,\n  onChange,\n  style,\n  focusFirstRender,\n  onSubmit,\n  onBlur,\n  ariaLabel,\n}: Props): React.ReactElement {\n  const inputRef = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    if (focusFirstRender) inputRef.current?.focus();\n  }, []);\n\n  return (\n    <input\n      ref={inputRef}\n      value={value}\n      className=\"input\"\n      onChange={(e): void => {\n        onChange(e.target.value);\n      }}\n      onBlur={onBlur}\n      onKeyDown={(e): void => {\n        if (e.key === \"Enter\") onSubmit?.();\n      }}\n      aria-label={ariaLabel}\n      style={{\n        flex: 1,\n        backgroundColor: Colors.DARK.toString(),\n        borderColor: Colors.LIGHT_GREY.toString(),\n        color: Colors.LIGHT.toString(),\n        ...style,\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { IconButton as MuiIconButton } from \"@material-ui/core\";\nimport { useHover } from \"./useHover\";\nimport Color from \"color\";\nimport { Colors } from \"./colors\";\n\ninterface Props {\n  onClick: () => void;\n  color?: Color;\n  disabled?: boolean;\n  style?: React.CSSProperties;\n  children: React.ReactNode;\n  \"aria-label\"?: string;\n}\n\nexport function IconButton({\n  color = Colors.LIGHT,\n  disabled,\n  style,\n  children,\n  ...rest\n}: Props): React.ReactElement {\n  const [ref, hovered] = useHover();\n  const fade = disabled ? 0.4 : hovered ? 0.15 : 0;\n\n  return (\n    <MuiIconButton\n      style={{\n        color: color?.fade(fade).toString(),\n        ...style,\n      }}\n      ref={ref}\n      disabled={disabled}\n      {...rest}\n    >\n      {children}\n    </MuiIconButton>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useHover(): [React.MutableRefObject<any>, boolean] {\n  const [value, setValue] = useState(false);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const ref: any = useRef(null);\n\n  const handleMouseOver = (): void => setValue(true);\n  const handleMouseOut = (): void => setValue(false);\n\n  useEffect((): void | (() => void) => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(\"mouseover\", handleMouseOver);\n      node.addEventListener(\"mouseout\", handleMouseOut);\n\n      return (): void => {\n        node.removeEventListener(\"mouseover\", handleMouseOver);\n        node.removeEventListener(\"mouseout\", handleMouseOut);\n      };\n    }\n  }, []);\n\n  return [ref, value];\n}\n","export function sanitiseNumericString(s: string): string {\n  if (!s) return s;\n  const negative = s[0] === \"-\";\n  const pieces = s.replace(/[^0-9.]/g, \"\").split(\".\");\n  return (\n    (negative ? \"-\" : \"\") +\n    (pieces.length >= 2\n      ? pieces[0] + \".\" + pieces.slice(1).join(\"\")\n      : pieces[0])\n  );\n}\n","export function random(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useWindowDimensions(): { width: number; height: number } {\n  const [windowDimensions, setWindowDimensions] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    function handleResize(): void {\n      setWindowDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return (): void => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import { BodyParameters } from \"./Body\";\nimport Color from \"color\";\nimport { Vector3 } from \"three\";\n\nexport function bodyParametersToString(body: BodyParameters): string {\n  return [\n    body.id,\n    body.name ?? \"\",\n    body.color.hex(),\n    body.x0.x.toString(),\n    body.x0.y.toString(),\n    body.x0.z.toString(),\n    body.v0.x.toString(),\n    body.v0.y.toString(),\n    body.v0.z.toString(),\n    body.m.toString(),\n    (+body.frameFollows).toString(),\n  ].join(\"_\");\n}\n\nexport function parseBodyParametersFromString(input: string): BodyParameters {\n  const parts = input.split(\"_\");\n  return {\n    id: parts[0],\n    name: parts[1] || undefined,\n    color: Color(parts[2]),\n    x0: new Vector3(\n      parseFloat(parts[3]),\n      parseFloat(parts[4]),\n      parseFloat(parts[5])\n    ),\n    v0: new Vector3(\n      parseFloat(parts[6]),\n      parseFloat(parts[7]),\n      parseFloat(parts[8])\n    ),\n    m: parseFloat(parts[9]),\n    frameFollows: Boolean(parseInt(parts[10])),\n  };\n}\n\nexport function listToString<T>(\n  list: T[],\n  elementToString: (x: T) => string\n): string {\n  return list.map(elementToString).join(\"*\");\n}\n\nexport function parseList<T>(\n  input: string | null,\n  elementParser: (x: string) => T\n): T[] {\n  return input?.split(\"*\").map(elementParser) ?? [];\n}\n\nexport function parseNullableFloat<T extends number | null>(\n  input: string | null,\n  defaultValue: T\n): number | T {\n  return input !== null ? parseFloat(input) : defaultValue;\n}\n","export const examples = [\n  {\n    stateString:\n      \"b0__#23E422_0_0_0_-0.001_0_-0.191_100_0*b1__#0CF2CB_2.03_0_0_0_3_6_1_0*b2__#F74376_1.97_0_0_0_-3_6_1_0*b3__#9E0885_-2_1_0_0_0_7_1_0*b4__#82681F_-2_1_0.012_9_0_7_0.01_0\",\n  },\n] as const;\n","import { BodyParameters } from \"../Body\";\nimport { Vector3 } from \"three\";\n\nexport class System {\n  points: Point[];\n  V = ZERO.clone();\n\n  constructor(public length: number) {\n    this.points = [];\n    for (let i = 0; i < length; i++) {\n      this.points.push([ZERO.clone(), ZERO.clone()]);\n    }\n  }\n\n  setVelocityToZero(): void {\n    for (let i = 0; i < this.points.length; i++) {\n      this.points[i][1].copy(ZERO);\n    }\n  }\n\n  setFrom(bodies: BodyParameters[]): this {\n    if (this.points.length < bodies.length)\n      throw new Error(\n        `This system has size ${this.points.length} so cannot hold ${bodies.length} points`\n      );\n\n    for (let i = 0; i < bodies.length; i++) {\n      this.points[i][0].copy(bodies[i].x0);\n      this.points[i][1].copy(bodies[i].v0);\n    }\n    return this;\n  }\n\n  copy(other: System): this {\n    if (this.points.length < other.points.length)\n      throw new Error(\n        `This system has size ${this.points.length} so cannot hold ${other.points.length} points`\n      );\n\n    for (let i = 0; i < other.points.length; i++) {\n      this.points[i][0].copy(other.points[i][0]);\n      this.points[i][1].copy(other.points[i][1]);\n    }\n    return this;\n  }\n\n  add(other: System): this {\n    if (this.points.length != other.points.length)\n      throw new Error(\n        `Systems of different size cannot be added. This size: ${this.points.length}. Other size: ${other.points.length}`\n      );\n\n    for (let i = 0; i < this.points.length; i++) {\n      this.points[i][0].add(other.points[i][0]);\n      this.points[i][1].add(other.points[i][1]);\n    }\n    return this;\n  }\n\n  addMultiple(other: System, scalar: number): this {\n    if (this.points.length != other.points.length)\n      throw new Error(\n        `Systems of different size cannot be added. This size: ${this.points.length}. Other size: ${other.points.length}`\n      );\n\n    for (let i = 0; i < this.points.length; i++) {\n      this.points[i][0].add(\n        this.V.copy(other.points[i][0]).multiplyScalar(scalar)\n      );\n      this.points[i][1].add(\n        this.V.copy(other.points[i][1]).multiplyScalar(scalar)\n      );\n    }\n    return this;\n  }\n\n  times(scalar: number): this {\n    for (let i = 0; i < this.points.length; i++) {\n      this.points[i][0].multiplyScalar(scalar);\n      this.points[i][1].multiplyScalar(scalar);\n    }\n    return this;\n  }\n\n  maxVelocity(): number {\n    if (this.points.length === 0) return 0;\n    let result = this.points[0][1].length();\n    for (let i = 0; i < this.points.length; i++) {\n      result = Math.max(result, this.points[i][1].length());\n    }\n    return result;\n  }\n}\n\ntype Point = [Vector3, Vector3]; // position and velocity\n\nconst ZERO = new Vector3(0, 0, 0);\n","import { System } from \"./System\";\nimport { Vector3 } from \"three\";\n\n// This function mutates the passed output system to avoid allocating extra memory\n// The output is the time derivative of the input treated as a system of bodies influenced by each others' gravity\nexport function gravity(\n  input: System,\n  masses: number[],\n  output: System,\n  G: number\n): void {\n  if (input.length != masses.length || input.length != output.length)\n    throw new Error(\"input, masses, and output must all be the same length\");\n\n  const V = ZERO.clone();\n  let r: number;\n  let k: number;\n\n  output.setVelocityToZero();\n  // Newtonian gravity determines change in velocity: a_i = Σ (m_j (x_j - x_i) / |x_j - x_i|^3)\n  for (let i = 0; i < input.length; i++) {\n    for (let j = i + 1; j < input.length; j++) {\n      V.copy(input.points[j][0]).sub(input.points[i][0]); // vector from bi to bj\n      r = V.length();\n      if (r == 0) continue; // TODO: better collision handling\n\n      k = G / (r * r);\n      V.normalize().multiplyScalar(k * masses[j]); // dvi\n      output.points[i][1].add(V);\n      V.normalize().multiplyScalar(-k * masses[i]); // dvj\n      output.points[j][1].add(V);\n    }\n  }\n\n  // Change in position is velocity\n  for (let i = 0; i < input.length; i++) {\n    output.points[i][0].copy(input.points[i][1]);\n  }\n}\n\nconst ZERO = new Vector3(0, 0, 0);\n","import { Vector3 } from \"three\";\n\nexport function transformPathsToCenterOfMassFrame(\n  paths: Vector3[][],\n  frameIndices: number[],\n  masses: number[]\n): Vector3[][] {\n  if (frameIndices.length == 0) return paths;\n  const result = paths.map(() => [] as Vector3[]);\n\n  let totalMass = 0;\n  for (const i of frameIndices) {\n    totalMass += masses[i];\n  }\n\n  const O = ZERO.clone();\n  for (let t = 0; t < paths[0].length; t++) {\n    // Set O to the center of mass\n    O.copy(ZERO);\n    for (const i of frameIndices) {\n      O.add(paths[i][t].clone().multiplyScalar(masses[i]));\n    }\n    O.divideScalar(totalMass);\n\n    for (let i = 0; i < paths.length; i++) {\n      result[i].push(paths[i][t].clone().sub(O));\n    }\n  }\n  return result;\n}\n\nconst ZERO = new Vector3(0, 0, 0);\n","import { BodyParameters } from \"../Body\";\nimport { Vector3 } from \"three\";\nimport { System } from \"./System\";\nimport { gravity } from \"./gravity\";\nimport { transformPathsToCenterOfMassFrame } from \"./transformPathsToCenterOfMassFrame\";\n\nexport class Pather {\n  // inputs\n  state: System;\n  masses: number[];\n\n  // outputs\n  paths: Vector3[][];\n\n  // intermediates\n  k1: System;\n  k2: System;\n  k3: System;\n  k4: System;\n  s1: System;\n  s2: System;\n  s3: System;\n\n  O: Vector3;\n\n  constructor(\n    initialState: BodyParameters[],\n    private maxXStep: number,\n    private G: number\n  ) {\n    this.state = new System(initialState.length).setFrom(initialState);\n    this.masses = initialState.map((b) => b.m);\n    this.paths = initialState.map((b) => [b.x0]);\n    this.k1 = new System(initialState.length);\n    this.k2 = new System(initialState.length);\n    this.k3 = new System(initialState.length);\n    this.k4 = new System(initialState.length);\n    this.s1 = new System(initialState.length);\n    this.s2 = new System(initialState.length);\n    this.s3 = new System(initialState.length);\n    this.O = new Vector3(0, 0, 0);\n  }\n\n  path(depth: number): this {\n    for (let i = 0; i < depth; i++) {\n      this.step();\n      this.appendStateToPaths();\n    }\n    return this;\n  }\n\n  getPaths(frameIndices: number[]): Vector3[][] {\n    return transformPathsToCenterOfMassFrame(\n      this.paths,\n      frameIndices,\n      this.masses\n    );\n  }\n\n  // TODO: Try Verlet integration\n  // Implementation of RK4 https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods#The_Runge%E2%80%93Kutta_method\n  step(): void {\n    const timeStep = this.maxXStep / this.state.maxVelocity();\n    gravity(this.state, this.masses, this.k1, this.G); // Calculate and set k1\n    this.s1.copy(this.state).addMultiple(this.k1, 0.5 * timeStep);\n    gravity(this.s1, this.masses, this.k2, this.G); // Calculate and set k2\n    this.s2.copy(this.state).addMultiple(this.k2, 0.5 * timeStep);\n    gravity(this.s2, this.masses, this.k3, this.G); // Calculate and set k3\n    this.s3.copy(this.state).addMultiple(this.k3, timeStep);\n    gravity(this.s3, this.masses, this.k4, this.G); // Calculate and set k4\n\n    // s_{n+1} = s_n + (h/6)(k_1 + 2k_2 + 2k_3 + k_4)\n    this.state.addMultiple(\n      this.k1.addMultiple(this.k2, 2).addMultiple(this.k3, 2).add(this.k4),\n      timeStep / 6\n    );\n  }\n\n  appendStateToPaths(): void {\n    for (let i = 0; i < this.paths.length; i++) {\n      this.paths[i].push(this.state.points[i][0].clone());\n    }\n  }\n}\n","import { Body, BodyParameters } from \"./Body\";\nimport { Vector3 } from \"three\";\nimport autoBind from \"auto-bind\";\nimport { Colors } from \"ui\";\nimport {\n  bodyParametersToString,\n  listToString,\n  parseBodyParametersFromString,\n  parseList,\n  parseNullableFloat,\n} from \"./serialisation\";\nimport { examples } from \"./examples\";\nimport { Pather } from \"./Pather\";\nimport { isPresent } from \"ts-is-present\";\n\nconst G = 1;\n\nexport class Universe {\n  private state0: BodyParameters[] = [];\n  public state: Body[] = []; // TODO: should this be private? or called bodies?\n  private t = 0;\n\n  public pathingDepth = 5000;\n  public pathingStepSize = 0.001;\n\n  private bodyIdCounter = 0;\n\n  constructor(public render: () => void) {\n    this.setFromUrl();\n    this.setToInitialState();\n    this.calculatePaths();\n    autoBind(this);\n  }\n\n  public addBody(parameters?: Omit<Partial<BodyParameters>, \"id\">): void {\n    this.state0.push({\n      x0: new Vector3(0, 0, 0),\n      v0: new Vector3(0, 0, 0),\n      m: 0,\n      color: Colors.random(),\n      frameFollows: false,\n      ...parameters,\n      id: `b${this.bodyIdCounter}`,\n    });\n    this.bodyIdCounter += 1;\n    this.updateUrl();\n  }\n\n  public removeBody(bodyId: string): void {\n    this.state0 = this.state0.filter((b) => b.id !== bodyId);\n    this.updateUrl();\n  }\n\n  public setInitial<K extends keyof BodyParameters>(\n    field: K,\n    bodyId: string,\n    value: BodyParameters[K]\n  ): void {\n    const body = this.state0.find((b) => b.id === bodyId);\n    if (body) body[field] = value;\n    this.updateUrl();\n  }\n\n  public updateUrl(): void {\n    const url = new URL(window.location.toString());\n    url.searchParams.set(\n      \"bodies\",\n      listToString(this.state0, bodyParametersToString)\n    );\n    url.searchParams.set(\"pathingStepSize\", this.pathingStepSize.toString());\n    url.searchParams.set(\"pathingDepth\", this.pathingDepth.toString());\n    window.history.pushState({}, \"\", url);\n  }\n\n  public setInitialStateFromString(input: string | null): void {\n    this.state0 = parseList(input, parseBodyParametersFromString);\n    this.bodyIdCounter = this.state0.length;\n  }\n\n  private setFromUrl(): void {\n    const params = new URLSearchParams(window.location.search);\n    this.setInitialStateFromString(params.get(\"bodies\"));\n    if (this.state0.length === 0)\n      this.setInitialStateFromString(examples[0].stateString);\n    this.pathingStepSize = parseNullableFloat(\n      params.get(\"pathingStepSize\"),\n      0.0003\n    );\n    this.pathingDepth = parseNullableFloat(params.get(\"pathingDepth\"), 100000);\n  }\n\n  public update(): void {\n    this.setToInitialState(); // This shouldn't be in the final update method\n    this.calculatePaths();\n    this.updateUrl();\n    this.render();\n  }\n\n  private setToInitialState(): void {\n    this.state = this.state0.map((body) => ({\n      ...body,\n      x: body.x0,\n      v: body.v0,\n      path: [],\n    }));\n  }\n\n  private calculatePaths(): void {\n    new Pather(this.state0, this.pathingStepSize, G)\n      .path(this.pathingDepth)\n      .getPaths(\n        this.state0\n          .map((body, i) => (body.frameFollows ? i : undefined))\n          .filter(isPresent)\n      )\n      .forEach((path, i) => {\n        this.state[i].path = path;\n      });\n  }\n}\n","import React, {\n  createContext,\n  ReactElement,\n  ReactNode,\n  useContext,\n} from \"react\";\nimport { Universe } from \"./Universe\";\n\nconst UniverseContext = createContext<Universe>(new Universe(() => {}));\n\nexport function UniverseContextProvider({\n  children,\n  universe,\n}: {\n  children: ReactNode;\n  universe: Universe;\n}): ReactElement {\n  return (\n    <UniverseContext.Provider value={universe}>\n      {children}\n    </UniverseContext.Provider>\n  );\n}\n\nexport function useUniverse(): Universe {\n  return useContext(UniverseContext);\n}\n"],"sourceRoot":""}