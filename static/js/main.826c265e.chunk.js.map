{"version":3,"sources":["components/content/Line.tsx","components/content/Content.tsx","components/environment/Lighting.tsx","components/environment/Environment.tsx","ui/TextInput.tsx","ui/IconButton.tsx","ui/useHover.ts","components/controls/RemoveBodyButton.tsx","components/controls/BodyControls.tsx","components/controls/AddBodyButton.tsx","components/controls/InitialStateControls.tsx","components/controls/SimulationParameterControls.tsx","components/controls/Controls.tsx","App.tsx","index.tsx","ui/Row.tsx","utilities/sanitiseNumericString.ts","ui/VectorInput.tsx","ui/NumberInput.tsx","logic/index.ts","ui/colors.ts","ui/TextField.tsx","ui/Column.tsx","ui/InputLabel.tsx","utilities/random.ts","utilities/useWindowDimensions.ts","logic/Universe.ts","logic/UniverseContext.tsx"],"names":["Line","points","color","Colors","random","geometry","useRef","BufferGeometry","current","setFromPoints","attach","toString","linewidth","linecap","linejoin","extend","Line_","ThreeLine","Content","universe","useUniverse","state","map","body","path","id","Lighting","intensity","Environment","children","style","position","left","right","top","bottom","background","BLACK","camera","shadows","args","OrbitControls","autoRotate","TextInput","label","value","onChange","Column","InputLabel","TextField","width","maxWidth","IconButton","LIGHT","disabled","rest","useState","setValue","ref","handleMouseOver","handleMouseOut","useEffect","node","addEventListener","removeEventListener","useHover","hovered","fade","RemoveBodyButton","bodyId","removeBody","useCallback","update","onClick","Tooltip","title","size","BodyControls","index","BodyControlsContainer","justifyContent","name","newName","setInitialName","render","ColorSquare","backgroundColor","x","onSubmitOrBlur","v","m","val","setInitialMass","styled","div","AddBodyButton","addBody","InitialStateControls","Container","fontSize","i","Separator","SimulationParameterControls","ControlsGroup","pathingDepth","pathingStepSize","Row","Controls","windowHeight","useWindowDimensions","height","open","setOpen","ControlsContainer","maxHeight","DARK","App","setRenderHelper","Universe","ReactDOM","StrictMode","document","getElementById","sanitiseNumericString","s","negative","pieces","replace","split","length","slice","join","VectorInput","setX","y","setY","z","setZ","parseFloat","onSubmit","onBlur","marginLeft","NumberInput","Color","WHITE","hsv","focusFirstRender","ariaLabel","inputRef","focus","className","e","target","onKeyDown","key","aria-label","flex","borderColor","LabelContainer","min","max","Math","floor","window","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","state0","t","bodyIdCounter","this","x0","Vector3","v0","setToInitialState","calculatePaths","autoBind","parameters","push","filter","b","mass","find","k","r","bodies","clone","V","step","j","copy","sub","normalize","multiplyScalar","add","UniverseContext","createContext","UniverseContextProvider","Provider","useContext"],"mappings":"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","file":"static/js/main.826c265e.chunk.js","sourcesContent":["import { extend, ReactThreeFiber } from \"@react-three/fiber\";\nimport { BufferGeometry, Line as ThreeLine, Vector3 } from \"three\";\nimport Color from \"color\";\nimport React, { ReactElement, useRef } from \"react\";\nimport { Colors } from \"ui\";\n\nextend({ Line_: ThreeLine });\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      line_: ReactThreeFiber.Object3DNode<ThreeLine, typeof ThreeLine>;\n    }\n  }\n}\n\ninterface Props {\n  points: Vector3[];\n  color?: Color;\n}\n\nexport function Line({ points, color = Colors.random() }: Props): ReactElement {\n  const geometry = useRef(new BufferGeometry()).current;\n  geometry.setFromPoints(points);\n\n  return (\n    <line_ geometry={geometry}>\n      <lineBasicMaterial\n        attach=\"material\"\n        color={color.toString()}\n        linewidth={10}\n        linecap={\"round\"}\n        linejoin={\"round\"}\n      />\n    </line_>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Line } from \"./Line\";\nimport { useUniverse } from \"logic\";\n\nexport function Content(): ReactElement {\n  // const universe = useRef(new Universe()).current;\n  const universe = useUniverse();\n\n  return (\n    <>\n      {universe.state.map((body) => (\n        <Line key={body.id} points={body.path} color={body.color} />\n      ))}\n    </>\n  );\n}\n","import React, { FC } from \"react\";\n\nexport const Lighting: FC = () => {\n  // general glow plus three slightly different-warmth lights around the equator\n  return (\n    <>\n      <ambientLight intensity={1} />\n    </>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Lighting } from \"./Lighting\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { Colors } from \"ui\";\n\nexport function Environment({\n  children,\n}: {\n  children: ReactNode;\n}): React.ReactElement {\n  return (\n    <div style={{ position: \"absolute\", left: 0, right: 0, top: 0, bottom: 0 }}>\n      <Canvas\n        style={{ background: Colors.BLACK.toString() }}\n        camera={{ position: [0, 5, 0] }}\n        shadows\n      >\n        <gridHelper args={[20, 20]} />\n        <Lighting />\n        {children}\n        <OrbitControls autoRotate={false} />\n      </Canvas>\n    </div>\n  );\n}\n","import React, { CSSProperties, ReactElement } from \"react\";\nimport { TextField } from \"./TextField\";\nimport { Column } from \"./Column\";\nimport { InputLabel } from \"./InputLabel\";\n\ninterface Props {\n  label?: string;\n  value: string;\n  onChange: (x: string) => void;\n  style?: CSSProperties;\n}\n\nexport function TextInput({\n  label,\n  value,\n  onChange,\n  style,\n}: Props): ReactElement {\n  return (\n    <Column style={style}>\n      <InputLabel label={label} />\n      <TextField\n        value={value}\n        onChange={onChange}\n        style={{ width: style?.width ?? 62, maxWidth: style?.width ?? 62 }}\n      />\n    </Column>\n  );\n}\n","import React from \"react\";\nimport { IconButton as MuiIconButton } from \"@material-ui/core\";\nimport { useHover } from \"./useHover\";\nimport Color from \"color\";\nimport { Colors } from \"./colors\";\n\ninterface Props {\n  onClick: () => void;\n  color?: Color;\n  disabled?: boolean;\n  style?: React.CSSProperties;\n  children: React.ReactNode;\n  \"aria-label\"?: string;\n}\n\nexport function IconButton({\n  color = Colors.LIGHT,\n  disabled,\n  style,\n  children,\n  ...rest\n}: Props): React.ReactElement {\n  const [ref, hovered] = useHover();\n  const fade = disabled ? 0.4 : hovered ? 0.15 : 0;\n\n  return (\n    <MuiIconButton\n      style={{\n        color: color?.fade(fade).toString(),\n        ...style,\n      }}\n      ref={ref}\n      disabled={disabled}\n      {...rest}\n    >\n      {children}\n    </MuiIconButton>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useHover(): [React.MutableRefObject<any>, boolean] {\n  const [value, setValue] = useState(false);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const ref: any = useRef(null);\n\n  const handleMouseOver = (): void => setValue(true);\n  const handleMouseOut = (): void => setValue(false);\n\n  useEffect((): void | (() => void) => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(\"mouseover\", handleMouseOver);\n      node.addEventListener(\"mouseout\", handleMouseOut);\n\n      return (): void => {\n        node.removeEventListener(\"mouseover\", handleMouseOver);\n        node.removeEventListener(\"mouseout\", handleMouseOut);\n      };\n    }\n  }, []);\n\n  return [ref, value];\n}\n","import { IconButton } from \"../../ui/IconButton\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { IoMdRemoveCircleOutline } from \"react-icons/all\";\nimport React, { CSSProperties, ReactElement, useCallback } from \"react\";\nimport { useUniverse } from \"logic\";\n\ninterface Props {\n  bodyId: string;\n  style?: CSSProperties;\n}\n\nexport function RemoveBodyButton({ bodyId, style }: Props): ReactElement {\n  const universe = useUniverse();\n\n  const removeBody = useCallback((): void => {\n    universe.removeBody(bodyId);\n    universe.update();\n  }, [universe]);\n\n  return (\n    <IconButton onClick={removeBody} style={style}>\n      <Tooltip title={\"Remove body\"}>\n        <div>\n          <IoMdRemoveCircleOutline size={16} />\n        </div>\n      </Tooltip>\n    </IconButton>\n  );\n}\n","import { NumberInput, Row, VectorInput } from \"ui\";\nimport { TextInput } from \"../../ui/TextInput\";\nimport React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport { Body, useUniverse } from \"logic\";\nimport { RemoveBodyButton } from \"./RemoveBodyButton\";\n\ninterface Props {\n  body: Body;\n  index: number;\n}\n\nexport function BodyControls({ body, index }: Props): ReactElement {\n  const universe = useUniverse();\n\n  return (\n    <BodyControlsContainer key={body.id}>\n      <Row style={{ justifyContent: \"space-between\" }}>\n        <Row>\n          <TextInput\n            label={\"Name\"}\n            value={body.name ?? `Body ${index + 1}`}\n            onChange={(newName): void => {\n              body.name = newName;\n              universe.setInitialName(body.id, newName);\n              universe.render();\n            }}\n          />\n          <ColorSquare style={{ backgroundColor: body.color.toString() }} />\n        </Row>\n        <RemoveBodyButton bodyId={body.id} />\n      </Row>\n      <VectorInput\n        label={\"Position\"}\n        value={body.x}\n        onSubmitOrBlur={universe.update}\n      />\n      <VectorInput\n        label={\"Velocity\"}\n        value={body.v}\n        onSubmitOrBlur={universe.update}\n      />\n      <NumberInput\n        label={\"Mass\"}\n        value={body.m}\n        onSubmitOrBlur={(val): void => {\n          universe.setInitialMass(body.id, val);\n          universe.update();\n        }}\n      />\n    </BodyControlsContainer>\n  );\n}\n\nconst BodyControlsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-left: 8px;\n`;\n\nconst ColorSquare = styled.div`\n  width: 12px;\n  height: 12px;\n  margin-top: 10px;\n  margin-left: 12px;\n`;\n","import { IconButton } from \"../../ui/IconButton\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { IoMdAddCircleOutline } from \"react-icons/all\";\nimport React, { ReactElement, useCallback } from \"react\";\nimport { useUniverse } from \"logic\";\n\nexport function AddBodyButton(): ReactElement {\n  const universe = useUniverse();\n\n  const addBody = useCallback((): void => {\n    universe.addBody();\n    universe.update();\n  }, []);\n\n  return (\n    <IconButton onClick={addBody} style={{}}>\n      <Tooltip title={\"Add new body\"}>\n        <div>\n          <IoMdAddCircleOutline />\n        </div>\n      </Tooltip>\n    </IconButton>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Colors } from \"ui\";\nimport { useUniverse } from \"logic\";\nimport styled from \"styled-components\";\nimport { BodyControls } from \"./BodyControls\";\nimport { AddBodyButton } from \"./AddBodyButton\";\n\nexport function InitialStateControls(): ReactElement {\n  const universe = useUniverse();\n\n  return (\n    <Container style={{ color: Colors.LIGHT.toString(), fontSize: 12 }}>\n      Initial state:\n      {universe.state.map((body, i) => {\n        return (\n          <>\n            <BodyControls body={body} index={i} />\n            <Separator />\n          </>\n        );\n      })}\n      <AddBodyButton />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst Separator = styled.div`\n  border-bottom: 1px solid ${Colors.LIGHT.fade(0.5).toString()};\n  align-self: stretch;\n  margin-left: 40px;\n  margin-right: 40px;\n`;\n","import React, { ReactElement } from \"react\";\nimport { Colors, NumberInput, Row } from \"ui\";\nimport { useUniverse } from \"logic\";\nimport styled from \"styled-components\";\n\nexport function SimulationParameterControls(): ReactElement {\n  const universe = useUniverse();\n\n  return (\n    <Container style={{ color: Colors.LIGHT.toString(), fontSize: 12 }}>\n      Path extrapolation parameters:\n      <ControlsGroup>\n        <NumberInput\n          label={\"Step count\"}\n          value={universe.pathingDepth}\n          onSubmitOrBlur={(val): void => {\n            universe.pathingDepth = val;\n            universe.update();\n          }}\n        />\n        <NumberInput\n          label={\"Step size\"}\n          value={universe.pathingStepSize}\n          onSubmitOrBlur={(val): void => {\n            universe.pathingStepSize = val;\n            universe.update();\n          }}\n        />\n      </ControlsGroup>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst ControlsGroup = styled(Row)`\n  gap: 4px;\n  margin-left: 8px;\n`;\n","import React, { ReactElement, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { RxHamburgerMenu } from \"react-icons/rx\";\nimport { Colors } from \"ui\";\nimport { useWindowDimensions } from \"utilities\";\nimport { InitialStateControls } from \"./InitialStateControls\";\nimport { SimulationParameterControls } from \"./SimulationParameterControls\";\nimport { IconButton } from \"../../ui/IconButton\";\nimport { IoMdClose } from \"react-icons/io\";\n\nexport function Controls(): ReactElement {\n  const { height: windowHeight } = useWindowDimensions();\n  const [open, setOpen] = useState(true);\n\n  if (!open) {\n    return (\n      <IconButton\n        onClick={(): void => setOpen(true)}\n        style={{ position: \"absolute\", top: 16, right: 16 }}\n      >\n        <RxHamburgerMenu />\n      </IconButton>\n    );\n  }\n\n  return (\n    // TODO: Why does 88 work - shouldn't 32 be enough?\n    <ControlsContainer style={{ maxHeight: windowHeight - 88 }}>\n      <IconButton\n        onClick={(): void => setOpen(false)}\n        style={{ position: \"absolute\", top: 0, right: 0 }}\n      >\n        <IoMdClose />\n      </IconButton>\n      <InitialStateControls />\n      <SimulationParameterControls />\n    </ControlsContainer>\n  );\n}\n\nconst ControlsContainer = styled.div`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 240px;\n  min-height: 100px;\n  background-color: ${Colors.DARK.toString()};\n  border: 1px solid ${Colors.LIGHT.toString()};\n  overflow-y: auto;\n  overflow-x: auto;\n  scroll-behaviour: smooth;\n  padding: 12px;\n  padding-bottom: 40px;\n  padding-top: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport { Content, Controls, Environment } from \"components\";\nimport { Universe, UniverseContextProvider } from \"logic\";\n\nfunction App(): React.ReactElement {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [_renderHelper, setRenderHelper] = useState(false);\n  const render = useCallback(\n    (): void => setRenderHelper((x): boolean => !x),\n    []\n  );\n  const [universe] = useState(() => new Universe(render));\n\n  return (\n    <>\n      <UniverseContextProvider universe={universe}>\n        <Environment>\n          <Content />\n        </Environment>\n        <Controls />\n      </UniverseContextProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// TODO: Replace with createRoot\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n","export function sanitiseNumericString(s: string): string {\n  if (!s) return s;\n  const negative = s[0] === \"-\";\n  const pieces = s.replace(/[^0-9.]/g, \"\").split(\".\");\n  return (\n    (negative ? \"-\" : \"\") +\n    (pieces.length >= 2\n      ? pieces[0] + \".\" + pieces.slice(1).join(\"\")\n      : pieces[0])\n  );\n}\n","import React, {\n  CSSProperties,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { Row } from \"./Row\";\nimport { Vector3 } from \"three\";\nimport { TextField } from \"./TextField\";\nimport { sanitiseNumericString } from \"../utilities/sanitiseNumericString\";\nimport { Column } from \"./Column\";\nimport { InputLabel } from \"./InputLabel\";\n\ninterface Props {\n  label?: string;\n  value: Vector3;\n  onSubmitOrBlur: (x: Vector3) => void;\n  style?: CSSProperties;\n}\n\n// This component will mutate the Vector\nexport function VectorInput({\n  label,\n  value,\n  onSubmitOrBlur,\n  style,\n}: Props): ReactElement {\n  const [x, setX] = useState(value.x.toString());\n  const [y, setY] = useState(value.y.toString());\n  const [z, setZ] = useState(value.z.toString());\n\n  useEffect(() => {\n    if (x != value.x.toString()) setX(value.x.toString());\n    if (y != value.y.toString()) setY(value.y.toString());\n    if (z != value.z.toString()) setZ(value.z.toString());\n  }, [value.x, value.y, value.z]);\n\n  const update = useCallback(() => {\n    setX(x || \"0\");\n    setY(y || \"0\");\n    setZ(z || \"0\");\n    value.setX(parseFloat(x || \"0\"));\n    value.setY(parseFloat(y || \"0\"));\n    value.setZ(parseFloat(z || \"0\"));\n    onSubmitOrBlur(value);\n  }, [value, x, y, z, setX, setY, setZ]);\n\n  return (\n    <Column style={style}>\n      <InputLabel label={label + \" (x, y, z)\"} />\n      <Row>\n        <TextField\n          value={x}\n          onChange={(x): void => {\n            setX(sanitiseNumericString(x));\n          }}\n          onSubmit={update}\n          onBlur={update}\n          style={{ width: 62, maxWidth: 62 }}\n        />\n        <TextField\n          value={y}\n          onChange={(y): void => {\n            setY(sanitiseNumericString(y));\n          }}\n          onSubmit={update}\n          onBlur={update}\n          style={{ marginLeft: 4, width: 62, maxWidth: 62 }}\n        />\n        <TextField\n          value={z}\n          onChange={(z): void => {\n            setZ(sanitiseNumericString(z));\n          }}\n          onSubmit={update}\n          onBlur={update}\n          style={{ marginLeft: 4, width: 62, maxWidth: 62 }}\n        />\n      </Row>\n    </Column>\n  );\n}\n","import React, {\n  CSSProperties,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { TextField } from \"./TextField\";\nimport { sanitiseNumericString } from \"../utilities/sanitiseNumericString\";\nimport { Column } from \"./Column\";\nimport { InputLabel } from \"./InputLabel\";\n\ninterface Props {\n  label?: string;\n  value: number;\n  onSubmitOrBlur: (x: number) => void;\n  style?: CSSProperties;\n}\n\nexport function NumberInput({\n  label,\n  value,\n  onSubmitOrBlur,\n  style,\n}: Props): ReactElement {\n  const [x, setX] = useState(value.toString());\n\n  useEffect(() => {\n    if (x != value.toString()) setX(value.toString());\n  }, [value]);\n\n  const update = useCallback(() => {\n    setX(x || \"0\");\n    onSubmitOrBlur(parseFloat(x || \"0\"));\n  }, [value, x, setX]);\n\n  return (\n    <Column style={style}>\n      <InputLabel label={label} />\n      <TextField\n        value={x}\n        onChange={(x): void => {\n          setX(sanitiseNumericString(x));\n        }}\n        onSubmit={update}\n        onBlur={update}\n        style={{ width: style?.width ?? 62, maxWidth: style?.width ?? 62 }}\n      />\n    </Column>\n  );\n}\n","export * from \"./Body\";\nexport * from \"./Universe\";\nexport * from \"./UniverseContext\";\n","import Color from \"color\";\nimport { random } from \"utilities\";\n\nexport const Colors = {\n  BLACK: Color(\"#000000\"),\n  DARK: Color(\"#101113\"),\n  LIGHT: Color(\"#DCDDDF\"),\n  WHITE: Color(\"#FFFFFF\"),\n  random: (): Color =>\n    Color.hsv(random(0, 360), random(50, 100), random(50, 100)),\n};\n","import React, { useEffect, useRef } from \"react\";\nimport \"./TextField.css\";\nimport { Colors } from \"./colors\";\n\ninterface Props {\n  value: string | number;\n  onChange: (newVal: string) => void;\n  style?: React.CSSProperties;\n  focusFirstRender?: boolean;\n  onSubmit?: () => void;\n  onBlur?: () => void;\n  ariaLabel?: string;\n}\n\nexport function TextField({\n  value,\n  onChange,\n  style,\n  focusFirstRender,\n  onSubmit,\n  onBlur,\n  ariaLabel,\n}: Props): React.ReactElement {\n  const inputRef = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    if (focusFirstRender) inputRef.current?.focus();\n  }, []);\n\n  return (\n    <input\n      ref={inputRef}\n      value={value}\n      className=\"input\"\n      onChange={(e): void => {\n        onChange(e.target.value);\n      }}\n      onBlur={onBlur}\n      onKeyDown={(e): void => {\n        if (e.key === \"Enter\") onSubmit?.();\n      }}\n      aria-label={ariaLabel}\n      style={{\n        flex: 1,\n        backgroundColor: Colors.DARK.toString(),\n        borderColor: Colors.LIGHT.fade(0.5).toString(),\n        color: Colors.LIGHT.toString(),\n        ...style,\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"./colors\";\n\ninterface Props {\n  label?: string;\n}\n\nexport function InputLabel({ label }: Props): ReactElement | null {\n  return label ? <LabelContainer>{label}</LabelContainer> : null;\n}\n\nconst LabelContainer = styled.div`\n  color: ${Colors.LIGHT.toString()};\n  font-size: 10px;\n`;\n","export function random(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useWindowDimensions(): { width: number; height: number } {\n  const [windowDimensions, setWindowDimensions] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    function handleResize(): void {\n      setWindowDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return (): void => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import { Body, BodyParameters } from \"./Body\";\nimport { Vector3 } from \"three\";\nimport autoBind from \"auto-bind\";\nimport { Colors } from \"ui\";\n\nconst G = 1;\n\nexport class Universe {\n  private state0: BodyParameters[] = [];\n  public state: Body[] = []; // TODO: should this be private? or called bodies?\n  private t = 0;\n\n  public pathingDepth = 5000;\n  public pathingStepSize = 0.001;\n\n  private bodyIdCounter = 0;\n\n  constructor(public render: () => void) {\n    this.addBody({\n      x0: new Vector3(0, 0, 0),\n      v0: new Vector3(0, 0, -0.12),\n      m: 100,\n    });\n    this.addBody({\n      x0: new Vector3(2.03, 0, 0),\n      v0: new Vector3(0, 3, 6),\n      m: 1,\n    });\n    this.addBody({\n      x0: new Vector3(1.97, 0, 0),\n      v0: new Vector3(0, -3, 6),\n      m: 1,\n    });\n    this.setToInitialState();\n    this.calculatePaths();\n    autoBind(this);\n  }\n\n  public addBody(parameters?: Omit<BodyParameters, \"id\" | \"color\">): void {\n    this.state0.push({\n      color: Colors.random(),\n      ...(parameters || {\n        x0: new Vector3(0, 0, 0),\n        v0: new Vector3(0, 0, 0),\n        m: 0,\n      }),\n      id: `b${this.bodyIdCounter}`,\n    });\n    this.bodyIdCounter += 1;\n  }\n\n  public removeBody(bodyId: string): void {\n    this.state0 = this.state0.filter((b) => b.id !== bodyId);\n  }\n\n  public setInitialMass(bodyId: string, mass: number): void {\n    const body = this.state0.find((b) => b.id == bodyId);\n    if (body) body.m = mass;\n  }\n\n  public setInitialName(bodyId: string, name: string): void {\n    const body = this.state0.find((b) => b.id == bodyId);\n    if (body) body.name = name;\n  }\n\n  public update(): void {\n    this.setToInitialState(); // This shouldn't be in the final update method\n    this.calculatePaths();\n    this.render();\n  }\n\n  private setToInitialState(): void {\n    this.state = this.state0.map((body) => ({\n      ...body,\n      x: body.x0,\n      v: body.v0,\n      path: [body.x0],\n    }));\n  }\n\n  private calculatePaths(): void {\n    // TODO: better algorithms - do some maths about how the field evolves\n    // TODO: adaptive step size\n    const bodies = this.state.map((b) => ({\n      x: b.x.clone(),\n      v: b.v.clone(),\n      m: b.m,\n    }));\n    let k: number;\n    let r: number;\n    const V = new Vector3(0, 0, 0);\n    for (let step = 0; step < this.pathingDepth; step++) {\n      for (let i = 0; i < bodies.length; i++) {\n        for (let j = i + 1; j < bodies.length; j++) {\n          V.copy(bodies[j].x).sub(bodies[i].x); // vector from bi to bj\n          r = V.length();\n          if (r == 0) continue;\n          // if (r < 0.01 && bodies[i].m * bodies[j].m > 0) {\n          //   console.log(\"COLLISION!\");\n          //   return;\n          // }\n\n          k = (this.pathingStepSize * G) / (r * r);\n          V.normalize().multiplyScalar(k * bodies[j].m); // dvi\n          bodies[i].v.add(V);\n          V.normalize().multiplyScalar(-k * bodies[i].m); // dvj\n          bodies[j].v.add(V);\n        }\n      }\n\n      for (let i = 0; i < bodies.length; i++) {\n        V.copy(bodies[i].v).multiplyScalar(this.pathingStepSize); // dxi\n        bodies[i].x.add(V);\n\n        this.state[i].path.push(bodies[i].x.clone());\n      }\n    }\n  }\n}\n","import React, {\n  createContext,\n  ReactElement,\n  ReactNode,\n  useContext,\n} from \"react\";\nimport { Universe } from \"./Universe\";\n\nconst UniverseContext = createContext<Universe>(new Universe(() => {}));\n\nexport function UniverseContextProvider({\n  children,\n  universe,\n}: {\n  children: ReactNode;\n  universe: Universe;\n}): ReactElement {\n  return (\n    <UniverseContext.Provider value={universe}>\n      {children}\n    </UniverseContext.Provider>\n  );\n}\n\nexport function useUniverse(): Universe {\n  return useContext(UniverseContext);\n}\n"],"sourceRoot":""}