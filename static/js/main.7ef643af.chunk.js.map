{"version":3,"sources":["components/content/Line.tsx","components/content/Content.tsx","components/environment/Lighting.tsx","components/environment/Environment.tsx","ui/TextInput.tsx","components/controls/RemoveBodyButton.tsx","components/controls/BodyControls.tsx","components/controls/AddBodyButton.tsx","components/controls/InitialStateControls.tsx","components/controls/SimulationParameterControls.tsx","components/controls/Controls.tsx","App.tsx","index.tsx","ui/ColorInput.tsx","ui/Row.tsx","utilities/sanitiseNumericString.ts","ui/VectorInput.tsx","ui/NumberInput.tsx","logic/index.ts","ui/Column.tsx","ui/colors.ts","ui/TextField.tsx","ui/IconButton.tsx","ui/useHover.ts","ui/InputLabel.tsx","utilities/random.ts","utilities/useWindowDimensions.ts","logic/Universe.ts","logic/UniverseContext.tsx"],"names":["Line","points","color","Colors","random","geometry","useRef","BufferGeometry","current","setFromPoints","attach","toString","linewidth","linecap","linejoin","extend","Line_","ThreeLine","Content","universe","useUniverse","state","map","body","path","id","Lighting","intensity","Environment","children","style","position","left","right","top","bottom","background","BLACK","camera","shadows","args","OrbitControls","autoRotate","TextInput","label","value","onChange","Column","InputLabel","TextField","width","maxWidth","RemoveBodyButton","bodyId","removeBody","useCallback","update","IconButton","onClick","Tooltip","title","size","BodyControls","index","BodyControlsContainer","justifyContent","name","newName","setInitialName","render","newColor","setInitialColor","x","onSubmitOrBlur","v","m","newMass","setInitialMass","styled","div","AddBodyButton","addBody","InitialStateControls","Container","LIGHT","fontSize","i","Separator","fade","SimulationParameterControls","ControlsGroup","pathingDepth","val","pathingStepSize","Row","Controls","windowHeight","useWindowDimensions","height","useState","open","setOpen","ControlsContainer","maxHeight","DARK","App","setRenderHelper","Universe","ReactDOM","StrictMode","document","getElementById","ColorInput","ref","useEffect","closeOnEscape","e","key","window","addEventListener","closeOnOutsideClick","contains","target","removeEventListener","o","ColorSquare","backgroundColor","Anchor","zIndex","hex","c","includes","Color","sanitiseNumericString","s","negative","pieces","replace","split","length","slice","join","VectorInput","setX","y","setY","z","setZ","parseFloat","onSubmit","onBlur","marginLeft","NumberInput","WHITE","hsv","focusFirstRender","ariaLabel","inputRef","focus","className","onKeyDown","aria-label","flex","borderColor","disabled","rest","setValue","handleMouseOver","handleMouseOut","node","useHover","hovered","LabelContainer","min","max","Math","floor","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","state0","t","bodyIdCounter","this","x0","Vector3","v0","setToInitialState","calculatePaths","autoBind","parameters","push","filter","b","mass","find","k","r","bodies","clone","V","step","j","copy","sub","normalize","multiplyScalar","add","UniverseContext","createContext","UniverseContextProvider","Provider","useContext"],"mappings":"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","file":"static/js/main.7ef643af.chunk.js","sourcesContent":["import { extend, ReactThreeFiber } from \"@react-three/fiber\";\nimport { BufferGeometry, Line as ThreeLine, Vector3 } from \"three\";\nimport Color from \"color\";\nimport React, { ReactElement, useRef } from \"react\";\nimport { Colors } from \"ui\";\n\nextend({ Line_: ThreeLine });\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      line_: ReactThreeFiber.Object3DNode<ThreeLine, typeof ThreeLine>;\n    }\n  }\n}\n\ninterface Props {\n  points: Vector3[];\n  color?: Color;\n}\n\nexport function Line({ points, color = Colors.random() }: Props): ReactElement {\n  const geometry = useRef(new BufferGeometry()).current;\n  geometry.setFromPoints(points);\n\n  return (\n    <line_ geometry={geometry}>\n      <lineBasicMaterial\n        attach=\"material\"\n        color={color.toString()}\n        linewidth={10}\n        linecap={\"round\"}\n        linejoin={\"round\"}\n      />\n    </line_>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Line } from \"./Line\";\nimport { useUniverse } from \"logic\";\n\nexport function Content(): ReactElement {\n  // const universe = useRef(new Universe()).current;\n  const universe = useUniverse();\n\n  return (\n    <>\n      {universe.state.map((body) => (\n        <Line key={body.id} points={body.path} color={body.color} />\n      ))}\n    </>\n  );\n}\n","import React, { FC } from \"react\";\n\nexport const Lighting: FC = () => {\n  // general glow plus three slightly different-warmth lights around the equator\n  return (\n    <>\n      <ambientLight intensity={1} />\n    </>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Lighting } from \"./Lighting\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { Colors } from \"ui\";\n\nexport function Environment({\n  children,\n}: {\n  children: ReactNode;\n}): React.ReactElement {\n  return (\n    <div style={{ position: \"absolute\", left: 0, right: 0, top: 0, bottom: 0 }}>\n      <Canvas\n        style={{ background: Colors.BLACK.toString() }}\n        camera={{ position: [0, 5, 0] }}\n        shadows\n      >\n        <gridHelper args={[20, 20]} />\n        <Lighting />\n        {children}\n        <OrbitControls autoRotate={false} />\n      </Canvas>\n    </div>\n  );\n}\n","import React, { CSSProperties, ReactElement } from \"react\";\nimport { TextField } from \"./TextField\";\nimport { Column } from \"./Column\";\nimport { InputLabel } from \"./InputLabel\";\n\ninterface Props {\n  label?: string;\n  value: string;\n  onChange: (x: string) => void;\n  style?: CSSProperties;\n}\n\nexport function TextInput({\n  label,\n  value,\n  onChange,\n  style,\n}: Props): ReactElement {\n  return (\n    <Column style={style}>\n      <InputLabel label={label} />\n      <TextField\n        value={value}\n        onChange={onChange}\n        style={{ width: style?.width ?? 62, maxWidth: style?.width ?? 62 }}\n      />\n    </Column>\n  );\n}\n","import { IconButton } from \"../../ui/IconButton\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { IoMdRemoveCircleOutline } from \"react-icons/all\";\nimport React, { CSSProperties, ReactElement, useCallback } from \"react\";\nimport { useUniverse } from \"logic\";\n\ninterface Props {\n  bodyId: string;\n  style?: CSSProperties;\n}\n\nexport function RemoveBodyButton({ bodyId, style }: Props): ReactElement {\n  const universe = useUniverse();\n\n  const removeBody = useCallback((): void => {\n    universe.removeBody(bodyId);\n    universe.update();\n  }, [universe]);\n\n  return (\n    <IconButton onClick={removeBody} style={style}>\n      <Tooltip title={\"Remove body\"}>\n        <div>\n          <IoMdRemoveCircleOutline size={16} />\n        </div>\n      </Tooltip>\n    </IconButton>\n  );\n}\n","import { ColorInput, NumberInput, Row, VectorInput } from \"ui\";\nimport { TextInput } from \"../../ui/TextInput\";\nimport React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport { Body, useUniverse } from \"logic\";\nimport { RemoveBodyButton } from \"./RemoveBodyButton\";\n\ninterface Props {\n  body: Body;\n  index: number;\n}\n\nexport function BodyControls({ body, index }: Props): ReactElement {\n  const universe = useUniverse();\n\n  return (\n    <BodyControlsContainer>\n      <Row style={{ justifyContent: \"space-between\" }}>\n        <Row>\n          <TextInput\n            label={\"Name\"}\n            value={body.name ?? `Body ${index + 1}`}\n            onChange={(newName): void => {\n              body.name = newName;\n              universe.setInitialName(body.id, newName);\n              universe.render();\n            }}\n          />\n          <ColorInput\n            label={\"Color\"}\n            value={body.color}\n            onChange={(newColor): void => {\n              body.color = newColor;\n              universe.setInitialColor(body.id, newColor);\n              universe.render();\n            }}\n          />\n        </Row>\n        <RemoveBodyButton bodyId={body.id} />\n      </Row>\n      <VectorInput\n        label={\"Position\"}\n        value={body.x}\n        onSubmitOrBlur={universe.update}\n      />\n      <VectorInput\n        label={\"Velocity\"}\n        value={body.v}\n        onSubmitOrBlur={universe.update}\n      />\n      <NumberInput\n        label={\"Mass\"}\n        value={body.m}\n        onSubmitOrBlur={(newMass): void => {\n          universe.setInitialMass(body.id, newMass);\n          universe.update();\n        }}\n      />\n    </BodyControlsContainer>\n  );\n}\n\nconst BodyControlsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-left: 8px;\n`;\n","import { IconButton } from \"../../ui/IconButton\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { IoMdAddCircleOutline } from \"react-icons/all\";\nimport React, { ReactElement, useCallback } from \"react\";\nimport { useUniverse } from \"logic\";\n\nexport function AddBodyButton(): ReactElement {\n  const universe = useUniverse();\n\n  const addBody = useCallback((): void => {\n    universe.addBody();\n    universe.update();\n  }, []);\n\n  return (\n    <IconButton onClick={addBody} style={{}}>\n      <Tooltip title={\"Add new body\"}>\n        <div>\n          <IoMdAddCircleOutline />\n        </div>\n      </Tooltip>\n    </IconButton>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { Colors } from \"ui\";\nimport { useUniverse } from \"logic\";\nimport styled from \"styled-components\";\nimport { BodyControls } from \"./BodyControls\";\nimport { AddBodyButton } from \"./AddBodyButton\";\n\nexport function InitialStateControls(): ReactElement {\n  const universe = useUniverse();\n\n  return (\n    <Container style={{ color: Colors.LIGHT.toString(), fontSize: 12 }}>\n      Initial state:\n      {universe.state.map((body, i) => {\n        return (\n          <>\n            <BodyControls body={body} index={i} key={body.id} />\n            <Separator key={body.id + \"s\"} />\n          </>\n        );\n      })}\n      <AddBodyButton />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst Separator = styled.div`\n  border-bottom: 1px solid ${Colors.LIGHT.fade(0.5).toString()};\n  align-self: stretch;\n  margin-left: 40px;\n  margin-right: 40px;\n`;\n","import React, { ReactElement } from \"react\";\nimport { Colors, NumberInput, Row } from \"ui\";\nimport { useUniverse } from \"logic\";\nimport styled from \"styled-components\";\n\nexport function SimulationParameterControls(): ReactElement {\n  const universe = useUniverse();\n\n  return (\n    <Container style={{ color: Colors.LIGHT.toString(), fontSize: 12 }}>\n      Path extrapolation parameters:\n      <ControlsGroup>\n        <NumberInput\n          label={\"Step count\"}\n          value={universe.pathingDepth}\n          onSubmitOrBlur={(val): void => {\n            universe.pathingDepth = val;\n            universe.update();\n          }}\n        />\n        <NumberInput\n          label={\"Step size\"}\n          value={universe.pathingStepSize}\n          onSubmitOrBlur={(val): void => {\n            universe.pathingStepSize = val;\n            universe.update();\n          }}\n        />\n      </ControlsGroup>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst ControlsGroup = styled(Row)`\n  gap: 4px;\n  margin-left: 8px;\n`;\n","import React, { ReactElement, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { RxHamburgerMenu } from \"react-icons/rx\";\nimport { Colors } from \"ui\";\nimport { useWindowDimensions } from \"utilities\";\nimport { InitialStateControls } from \"./InitialStateControls\";\nimport { SimulationParameterControls } from \"./SimulationParameterControls\";\nimport { IconButton } from \"../../ui/IconButton\";\nimport { IoMdClose } from \"react-icons/io\";\n\nexport function Controls(): ReactElement {\n  const { height: windowHeight } = useWindowDimensions();\n  const [open, setOpen] = useState(true);\n\n  if (!open) {\n    return (\n      <IconButton\n        onClick={(): void => setOpen(true)}\n        style={{ position: \"absolute\", top: 16, right: 16 }}\n      >\n        <RxHamburgerMenu />\n      </IconButton>\n    );\n  }\n\n  return (\n    // TODO: Why does 88 work - shouldn't 32 be enough?\n    <ControlsContainer style={{ maxHeight: windowHeight - 88 }}>\n      <IconButton\n        onClick={(): void => setOpen(false)}\n        style={{ position: \"absolute\", top: 0, right: 0 }}\n      >\n        <IoMdClose />\n      </IconButton>\n      <InitialStateControls />\n      <SimulationParameterControls />\n    </ControlsContainer>\n  );\n}\n\nconst ControlsContainer = styled.div`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 240px;\n  min-height: 100px;\n  background-color: ${Colors.DARK.toString()};\n  border: 1px solid ${Colors.LIGHT.toString()};\n  overflow-y: auto;\n  overflow-x: auto;\n  scroll-behaviour: smooth;\n  padding: 12px;\n  padding-bottom: 40px;\n  padding-top: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n","import React, { useCallback, useState } from \"react\";\nimport { Content, Controls, Environment } from \"components\";\nimport { Universe, UniverseContextProvider } from \"logic\";\n\nfunction App(): React.ReactElement {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [_renderHelper, setRenderHelper] = useState(false);\n  const render = useCallback(\n    (): void => setRenderHelper((x): boolean => !x),\n    []\n  );\n  const [universe] = useState(() => new Universe(render));\n\n  return (\n    <>\n      <UniverseContextProvider universe={universe}>\n        <Environment>\n          <Content />\n        </Environment>\n        <Controls />\n      </UniverseContextProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// TODO: Replace with createRoot\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React, {\n  CSSProperties,\n  ReactElement,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { Column } from \"./Column\";\nimport { InputLabel } from \"./InputLabel\";\nimport Color from \"color\";\nimport { HexColorPicker } from \"react-colorful\";\nimport styled from \"styled-components\";\nimport { IconButton } from \"./IconButton\";\n\ninterface Props {\n  label?: string;\n  value: Color;\n  onChange: (x: Color) => void;\n  style?: CSSProperties;\n}\n\nexport function ColorInput({\n  label,\n  value,\n  onChange,\n  style,\n}: Props): ReactElement {\n  const [open, setOpen] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const closeOnEscape = (e: KeyboardEvent): void => {\n      if (e.key === \"Escape\") setOpen(false);\n    };\n    window.addEventListener(\"keydown\", closeOnEscape);\n\n    const closeOnOutsideClick = (e: MouseEvent): void => {\n      if (ref.current && !ref.current.contains(e.target as Node))\n        setOpen(false);\n    };\n    window.addEventListener(\"mousedown\", closeOnOutsideClick);\n\n    return (): void => {\n      window.removeEventListener(\"keydown\", closeOnEscape);\n      window.removeEventListener(\"mousedown\", closeOnOutsideClick);\n    };\n  }, [ref, setOpen]);\n\n  // TODO: add hidden text input for accessibility\n  return (\n    <Column style={style}>\n      <InputLabel label={label} />\n      <IconButton onClick={(): void => setOpen((o) => !o)}>\n        <ColorSquare style={{ backgroundColor: value.toString() }} />\n      </IconButton>\n\n      <Anchor>\n        {open && (\n          <div\n            ref={ref}\n            style={{\n              position: \"absolute\",\n              left: -60,\n              zIndex: 1,\n            }}\n          >\n            <HexColorPicker\n              color={value.hex()}\n              onChange={(c): void => {\n                if (!c.includes(\"NaN\")) onChange(Color(c));\n              }}\n            />\n          </div>\n        )}\n      </Anchor>\n    </Column>\n  );\n}\n\nconst ColorSquare = styled.div`\n  width: 12px;\n  height: 12px;\n`;\n\nconst Anchor = styled.div`\n  width: 1px;\n  height: 1px;\n  overflow: visible;\n  position: relative;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n","export function sanitiseNumericString(s: string): string {\n  if (!s) return s;\n  const negative = s[0] === \"-\";\n  const pieces = s.replace(/[^0-9.]/g, \"\").split(\".\");\n  return (\n    (negative ? \"-\" : \"\") +\n    (pieces.length >= 2\n      ? pieces[0] + \".\" + pieces.slice(1).join(\"\")\n      : pieces[0])\n  );\n}\n","import React, {\n  CSSProperties,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { Row } from \"./Row\";\nimport { Vector3 } from \"three\";\nimport { TextField } from \"./TextField\";\nimport { sanitiseNumericString } from \"../utilities/sanitiseNumericString\";\nimport { Column } from \"./Column\";\nimport { InputLabel } from \"./InputLabel\";\n\ninterface Props {\n  label?: string;\n  value: Vector3;\n  onSubmitOrBlur: (x: Vector3) => void;\n  style?: CSSProperties;\n}\n\n// This component will mutate the Vector\nexport function VectorInput({\n  label,\n  value,\n  onSubmitOrBlur,\n  style,\n}: Props): ReactElement {\n  const [x, setX] = useState(value.x.toString());\n  const [y, setY] = useState(value.y.toString());\n  const [z, setZ] = useState(value.z.toString());\n\n  useEffect(() => {\n    if (x != value.x.toString()) setX(value.x.toString());\n    if (y != value.y.toString()) setY(value.y.toString());\n    if (z != value.z.toString()) setZ(value.z.toString());\n  }, [value.x, value.y, value.z]);\n\n  const update = useCallback(() => {\n    setX(x || \"0\");\n    setY(y || \"0\");\n    setZ(z || \"0\");\n    value.setX(parseFloat(x || \"0\"));\n    value.setY(parseFloat(y || \"0\"));\n    value.setZ(parseFloat(z || \"0\"));\n    onSubmitOrBlur(value);\n  }, [value, x, y, z, setX, setY, setZ]);\n\n  return (\n    <Column style={style}>\n      <InputLabel label={label + \" (x, y, z)\"} />\n      <Row>\n        <TextField\n          value={x}\n          onChange={(x): void => {\n            setX(sanitiseNumericString(x));\n          }}\n          onSubmit={update}\n          onBlur={update}\n          style={{ width: 62, maxWidth: 62 }}\n        />\n        <TextField\n          value={y}\n          onChange={(y): void => {\n            setY(sanitiseNumericString(y));\n          }}\n          onSubmit={update}\n          onBlur={update}\n          style={{ marginLeft: 4, width: 62, maxWidth: 62 }}\n        />\n        <TextField\n          value={z}\n          onChange={(z): void => {\n            setZ(sanitiseNumericString(z));\n          }}\n          onSubmit={update}\n          onBlur={update}\n          style={{ marginLeft: 4, width: 62, maxWidth: 62 }}\n        />\n      </Row>\n    </Column>\n  );\n}\n","import React, {\n  CSSProperties,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { TextField } from \"./TextField\";\nimport { sanitiseNumericString } from \"../utilities/sanitiseNumericString\";\nimport { Column } from \"./Column\";\nimport { InputLabel } from \"./InputLabel\";\n\ninterface Props {\n  label?: string;\n  value: number;\n  onSubmitOrBlur: (x: number) => void;\n  style?: CSSProperties;\n}\n\nexport function NumberInput({\n  label,\n  value,\n  onSubmitOrBlur,\n  style,\n}: Props): ReactElement {\n  const [x, setX] = useState(value.toString());\n\n  useEffect(() => {\n    if (x != value.toString()) setX(value.toString());\n  }, [value]);\n\n  const update = useCallback(() => {\n    setX(x || \"0\");\n    onSubmitOrBlur(parseFloat(x || \"0\"));\n  }, [value, x, setX]);\n\n  return (\n    <Column style={style}>\n      <InputLabel label={label} />\n      <TextField\n        value={x}\n        onChange={(x): void => {\n          setX(sanitiseNumericString(x));\n        }}\n        onSubmit={update}\n        onBlur={update}\n        style={{ width: style?.width ?? 62, maxWidth: style?.width ?? 62 }}\n      />\n    </Column>\n  );\n}\n","export * from \"./Body\";\nexport * from \"./Universe\";\nexport * from \"./UniverseContext\";\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import Color from \"color\";\nimport { random } from \"utilities\";\n\nexport const Colors = {\n  BLACK: Color(\"#000000\"),\n  DARK: Color(\"#101113\"),\n  LIGHT: Color(\"#DCDDDF\"),\n  WHITE: Color(\"#FFFFFF\"),\n  random: (): Color =>\n    Color.hsv(random(0, 360), random(50, 100), random(50, 100)),\n};\n","import React, { useEffect, useRef } from \"react\";\nimport \"./TextField.css\";\nimport { Colors } from \"./colors\";\n\ninterface Props {\n  value: string | number;\n  onChange: (newVal: string) => void;\n  style?: React.CSSProperties;\n  focusFirstRender?: boolean;\n  onSubmit?: () => void;\n  onBlur?: () => void;\n  ariaLabel?: string;\n}\n\nexport function TextField({\n  value,\n  onChange,\n  style,\n  focusFirstRender,\n  onSubmit,\n  onBlur,\n  ariaLabel,\n}: Props): React.ReactElement {\n  const inputRef = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    if (focusFirstRender) inputRef.current?.focus();\n  }, []);\n\n  return (\n    <input\n      ref={inputRef}\n      value={value}\n      className=\"input\"\n      onChange={(e): void => {\n        onChange(e.target.value);\n      }}\n      onBlur={onBlur}\n      onKeyDown={(e): void => {\n        if (e.key === \"Enter\") onSubmit?.();\n      }}\n      aria-label={ariaLabel}\n      style={{\n        flex: 1,\n        backgroundColor: Colors.DARK.toString(),\n        borderColor: Colors.LIGHT.fade(0.5).toString(),\n        color: Colors.LIGHT.toString(),\n        ...style,\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { IconButton as MuiIconButton } from \"@material-ui/core\";\nimport { useHover } from \"./useHover\";\nimport Color from \"color\";\nimport { Colors } from \"./colors\";\n\ninterface Props {\n  onClick: () => void;\n  color?: Color;\n  disabled?: boolean;\n  style?: React.CSSProperties;\n  children: React.ReactNode;\n  \"aria-label\"?: string;\n}\n\nexport function IconButton({\n  color = Colors.LIGHT,\n  disabled,\n  style,\n  children,\n  ...rest\n}: Props): React.ReactElement {\n  const [ref, hovered] = useHover();\n  const fade = disabled ? 0.4 : hovered ? 0.15 : 0;\n\n  return (\n    <MuiIconButton\n      style={{\n        color: color?.fade(fade).toString(),\n        ...style,\n      }}\n      ref={ref}\n      disabled={disabled}\n      {...rest}\n    >\n      {children}\n    </MuiIconButton>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useHover(): [React.MutableRefObject<any>, boolean] {\n  const [value, setValue] = useState(false);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const ref: any = useRef(null);\n\n  const handleMouseOver = (): void => setValue(true);\n  const handleMouseOut = (): void => setValue(false);\n\n  useEffect((): void | (() => void) => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(\"mouseover\", handleMouseOver);\n      node.addEventListener(\"mouseout\", handleMouseOut);\n\n      return (): void => {\n        node.removeEventListener(\"mouseover\", handleMouseOver);\n        node.removeEventListener(\"mouseout\", handleMouseOut);\n      };\n    }\n  }, []);\n\n  return [ref, value];\n}\n","import React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"./colors\";\n\ninterface Props {\n  label?: string;\n}\n\nexport function InputLabel({ label }: Props): ReactElement | null {\n  return label ? <LabelContainer>{label}</LabelContainer> : null;\n}\n\nconst LabelContainer = styled.div`\n  color: ${Colors.LIGHT.toString()};\n  font-size: 10px;\n`;\n","export function random(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useWindowDimensions(): { width: number; height: number } {\n  const [windowDimensions, setWindowDimensions] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    function handleResize(): void {\n      setWindowDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return (): void => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import { Body, BodyParameters } from \"./Body\";\nimport { Vector3 } from \"three\";\nimport autoBind from \"auto-bind\";\nimport { Colors } from \"ui\";\nimport Color from \"color\";\n\nconst G = 1;\n\nexport class Universe {\n  private state0: BodyParameters[] = [];\n  public state: Body[] = []; // TODO: should this be private? or called bodies?\n  private t = 0;\n\n  public pathingDepth = 5000;\n  public pathingStepSize = 0.001;\n\n  private bodyIdCounter = 0;\n\n  constructor(public render: () => void) {\n    this.addBody({\n      x0: new Vector3(0, 0, 0),\n      v0: new Vector3(0, 0, -0.12),\n      m: 100,\n    });\n    this.addBody({\n      x0: new Vector3(2.03, 0, 0),\n      v0: new Vector3(0, 3, 6),\n      m: 1,\n    });\n    this.addBody({\n      x0: new Vector3(1.97, 0, 0),\n      v0: new Vector3(0, -3, 6),\n      m: 1,\n    });\n    this.setToInitialState();\n    this.calculatePaths();\n    autoBind(this);\n  }\n\n  public addBody(parameters?: Omit<BodyParameters, \"id\" | \"color\">): void {\n    this.state0.push({\n      color: Colors.random(),\n      ...(parameters || {\n        x0: new Vector3(0, 0, 0),\n        v0: new Vector3(0, 0, 0),\n        m: 0,\n      }),\n      id: `b${this.bodyIdCounter}`,\n    });\n    this.bodyIdCounter += 1;\n  }\n\n  public removeBody(bodyId: string): void {\n    this.state0 = this.state0.filter((b) => b.id !== bodyId);\n  }\n\n  public setInitialMass(bodyId: string, mass: number): void {\n    const body = this.state0.find((b) => b.id === bodyId);\n    if (body) body.m = mass;\n  }\n\n  public setInitialName(bodyId: string, name: string): void {\n    const body = this.state0.find((b) => b.id === bodyId);\n    if (body) body.name = name;\n  }\n\n  public setInitialColor(bodyId: string, color: Color): void {\n    const body = this.state0.find((b) => b.id === bodyId);\n    if (body) body.color = color;\n  }\n\n  public update(): void {\n    this.setToInitialState(); // This shouldn't be in the final update method\n    this.calculatePaths();\n    this.render();\n  }\n\n  private setToInitialState(): void {\n    this.state = this.state0.map((body) => ({\n      ...body,\n      x: body.x0,\n      v: body.v0,\n      path: [body.x0],\n    }));\n  }\n\n  private calculatePaths(): void {\n    // TODO: better algorithms - do some maths about how the field evolves\n    // TODO: adaptive step size\n    const bodies = this.state.map((b) => ({\n      x: b.x.clone(),\n      v: b.v.clone(),\n      m: b.m,\n    }));\n    let k: number;\n    let r: number;\n    const V = new Vector3(0, 0, 0);\n    for (let step = 0; step < this.pathingDepth; step++) {\n      for (let i = 0; i < bodies.length; i++) {\n        for (let j = i + 1; j < bodies.length; j++) {\n          V.copy(bodies[j].x).sub(bodies[i].x); // vector from bi to bj\n          r = V.length();\n          if (r == 0) continue; // TODO: better collision handling\n\n          k = (this.pathingStepSize * G) / (r * r);\n          V.normalize().multiplyScalar(k * bodies[j].m); // dvi\n          bodies[i].v.add(V);\n          V.normalize().multiplyScalar(-k * bodies[i].m); // dvj\n          bodies[j].v.add(V);\n        }\n      }\n\n      for (let i = 0; i < bodies.length; i++) {\n        V.copy(bodies[i].v).multiplyScalar(this.pathingStepSize); // dxi\n        bodies[i].x.add(V);\n\n        this.state[i].path.push(bodies[i].x.clone());\n      }\n    }\n  }\n}\n","import React, {\n  createContext,\n  ReactElement,\n  ReactNode,\n  useContext,\n} from \"react\";\nimport { Universe } from \"./Universe\";\n\nconst UniverseContext = createContext<Universe>(new Universe(() => {}));\n\nexport function UniverseContextProvider({\n  children,\n  universe,\n}: {\n  children: ReactNode;\n  universe: Universe;\n}): ReactElement {\n  return (\n    <UniverseContext.Provider value={universe}>\n      {children}\n    </UniverseContext.Provider>\n  );\n}\n\nexport function useUniverse(): Universe {\n  return useContext(UniverseContext);\n}\n"],"sourceRoot":""}